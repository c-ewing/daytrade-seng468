version: "3.9"

services:
######## PRODUCTION ########
  quote-price-redis:
    build: 
      context: ./timo-redis-docker/
      dockerfile: redis_dockerfile
    ports:
      - "6379" # Redis port, only exposed internally
    healthcheck:
      test: redis-cli -a timo-daytrade-redispass-8166d5d6-d622-4b62-bfdd-8c7d1a154c2f ping | grep PONG
      interval: 10s
      timeout: 15s
      retries: 5
      start_period: 15s
    profiles:
      - production

  trigger-symbol-redis:
    build: 
      context: ./timo-redis-docker/
      dockerfile: redis_dockerfile
    ports:
      - "6379" # Redis port, only exposed internally
    healthcheck:
      test: redis-cli -a timo-daytrade-redispass-8166d5d6-d622-4b62-bfdd-8c7d1a154c2f ping | grep PONG
      interval: 10s
      timeout: 15s
      retries: 5
      start_period: 15s
    profiles:
      - production

  rabbitmq:
    build: 
      context: ./timo-rabbitmq-docker/
      dockerfile: rabbitmq_dockerfile
    ports:
      - "5672"
      - "15672"
    healthcheck:
      test: rabbitmq-diagnostics -q check_running | grep "fully booted and running"
      interval: 10s
      timeout: 15s
      retries: 5
      start_period: 20s
    profiles:
      - production

  quote-driver:
    build: 
      context: . # In order to be able to access files in the "timo-quote-driver-source" directory we have to move the context up one directory
      dockerfile: ./timo-quote-driver-docker/quote_driver_dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      quote-price-redis:
        condition: service_healthy
    environment:
      - REDIS_CONNECTION_ADDRESS=quote-price-redis:6379
      - RABBITMQ_CONNECTION_STRING=amqp://guest:guest@rabbitmq:5672
      - MONGODB_CONNECTION_STRING=mongodb://root:example@mongodb:27017/?retryWrites=true&w=majority
      - QUOTE_SERVER_ADDRESS=quoteserve.seng.uvic.ca:4444
    profiles:
      - production

  trigger-driver:
    build: 
      context: . # In order to be able to access files in the "timo-trigger-driver-source" directory we have to move the context up one directory
      dockerfile: ./timo-trigger-driver-docker/trigger_driver_dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      trigger-symbol-redis:
        condition: service_healthy
    environment:
      - REDIS_CONNECTION_ADDRESS=trigger-symbol-redis:6379
      - RABBITMQ_CONNECTION_STRING=amqp://guest:guest@rabbitmq:5672
      - MONGODB_CONNECTION_STRING=mongodb://root:example@mongodb:27017/?retryWrites=true&w=majority
      - QUOTE_SERVER_ADDRESS=quoteserve.seng.uvic.ca:4444
    profiles:
      - production

  stock-watcher:
    build: 
      context: . # In order to be able to access files in the "timo-trigger-driver-source" directory we have to move the context up one directory
      dockerfile: ./timo-stock-watcher-docker/stock_watcher_dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      trigger-symbol-redis:
        condition: service_healthy
    environment:
      - REDIS_CONNECTION_ADDRESS=trigger-symbol-redis:6379
      - RABBITMQ_CONNECTION_STRING=amqp://guest:guest@rabbitmq:5672
      - MONGODB_CONNECTION_STRING=mongodb://root:example@mongodb:27017/?retryWrites=true&w=majority
    profiles:
      - production
    
  web-interface:
    build:
      context: ./timo-web-interface/
      dockerfile: web_dockerfile
    ports:
      - 80:80
    profiles:
      - production

  web-server:
    build:
      context: ./timo-web-server/
      dockerfile: web_server_dockerfile
    ports:
      - 8080:8080
    profiles:
      - production


######## DEVELOPMENT ########
  mongodb-dev:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    healthcheck:
      test: mongosh --eval "db.adminCommand('ping')"
      interval: 10s
      timeout: 15s
      retries: 5
      start_period: 15s
    profiles:
      - dev

  quote-price-redis-dev:
    build: 
      context: ./timo-redis-docker/
      dockerfile: redis_dev_dockerfile
    ports:
      - "6379:6379" # Redis port, exposed internally and externally
      - "8001:8001" # Redis Insight Port, exposed internally and externally
    healthcheck:
      test: redis-cli -a timo-daytrade-redispass-8166d5d6-d622-4b62-bfdd-8c7d1a154c2f ping | grep PONG
      interval: 10s
      timeout: 15s
      retries: 5
      start_period: 15s
    profiles:
      - dev

  trigger-symbol-redis-dev:
    build: 
      context: ./timo-redis-docker/
      dockerfile: redis_dev_dockerfile
    ports:
      - "6380:6379" # Redis port, exposed internally and externally
      - "8002:8001" # Redis Insight Port, exposed internally and externally
    healthcheck:
      test: redis-cli -a timo-daytrade-redispass-8166d5d6-d622-4b62-bfdd-8c7d1a154c2f ping | grep PONG
      interval: 10s
      timeout: 15s
      retries: 5
      start_period: 15s
    profiles:
      - dev
  
  rabbitmq-dev:
    build: 
      context: ./timo-rabbitmq-docker/
      dockerfile: rabbitmq_dockerfile
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q check_running | grep "fully booted and running"
      interval: 10s
      timeout: 15s
      retries: 5
      start_period: 20s
    profiles:
      - dev

  quote-driver-dev:
    build: 
      context: . # In order to be able to access files in the "timo-quote-driver-source" directory we have to move the context up one directory
      dockerfile: ./timo-quote-driver-docker/quote_driver_dockerfile
    depends_on:
      rabbitmq-dev:
        condition: service_healthy
      quote-price-redis-dev:
        condition: service_healthy
    environment:
      - REDIS_CONNECTION_ADDRESS=quote-price-redis-dev:6379
      - RABBITMQ_CONNECTION_STRING=amqp://guest:guest@rabbitmq-dev:5672
      - MONGODB_CONNECTION_STRING=mongodb://root:example@mongodb-dev:27017/?retryWrites=true&w=majority
      - QUOTE_SERVER_ADDRESS=host.docker.internal:4444
    profiles:
      - dev

  trigger-driver-dev:
    build: 
      context: . # In order to be able to access files in the "timo-trigger-driver-source" directory we have to move the context up one directory
      dockerfile: ./timo-trigger-driver-docker/trigger_driver_dockerfile
    depends_on:
      rabbitmq-dev:
        condition: service_healthy
      trigger-symbol-redis-dev:
        condition: service_healthy
    environment:
      - REDIS_CONNECTION_ADDRESS=trigger-symbol-redis-dev:6379
      - RABBITMQ_CONNECTION_STRING=amqp://guest:guest@rabbitmq-dev:5672
      - MONGODB_CONNECTION_STRING=mongodb://root:example@mongodb-dev:27017/?retryWrites=true&w=majority
    profiles:
      - dev

  stock-watcher-dev:
    build: 
      context: . # In order to be able to access files in the "timo-trigger-driver-source" directory we have to move the context up one directory
      dockerfile: ./timo-stock-watcher-docker/stock_watcher_dockerfile
    depends_on:
      rabbitmq-dev:
        condition: service_healthy
      trigger-symbol-redis-dev:
        condition: service_healthy
    environment:
      - REDIS_CONNECTION_ADDRESS=trigger-symbol-redis-dev:6379
      - RABBITMQ_CONNECTION_STRING=amqp://guest:guest@rabbitmq-dev:5672
      - MONGODB_CONNECTION_STRING=mongodb://root:example@mongodb-dev:27017/?retryWrites=true&w=majority
    profiles:
      - dev
      
  web-interface-dev:
    build:
      context: ./timo-web-interface/
      dockerfile: web_dockerfile
    ports:
      - 80:80
    profiles:
      - dev

  transaction-server-dev:
    build:
      context: .
      dockerfile: ./timo-transaction-server-docker/transaction_server_dockerfile
    depends_on:
      mongodb-dev:
        condition: service_healthy
      rabbitmq-dev:
        condition: service_healthy
    environment:
      - RABBITMQ_CONNECTION_STRING=amqp://guest:guest@rabbitmq-dev:5672
      - MONGODB_CONNECTION_STRING=mongodb://root:example@mongodb-dev:27017/?retryWrites=true&w=majority
    profiles:
      - dev

  web-server-dev:
      build:
        context: ./timo-web-server/
        dockerfile: web_server_dockerfile
      ports:
        - 8080:8080
      profiles:
        - dev

  ######## DATABASE ########

  cfgsvr1:
    container_name: cfgsvr1
    image: mongo
    command: mongod --configsvr --replSet cfgrs --port 27017 --dbpath /data/db
    ports:
      - 40001:27017
    volumes:
      - cfgsvr1:/data/db
    networks:
      timo-docker-network:
        ipv4_address: 10.5.0.2

  cfgsvr2:
    container_name: cfgsvr2
    image: mongo
    command: mongod --configsvr --replSet cfgrs --port 27017 --dbpath /data/db
    ports:
      - 40002:27017
    volumes:
      - cfgsvr2:/data/db
    networks:
      timo-docker-network:
        ipv4_address: 10.5.0.3

  cfgsvr3:
    container_name: cfgsvr3
    image: mongo
    command: mongod --configsvr --replSet cfgrs --port 27017 --dbpath /data/db
    ports:
      - 40003:27017
    volumes:
      - cfgsvr3:/data/db
    networks:
      timo-docker-network:
        ipv4_address: 10.5.0.4


  shard1svr1:
    container_name: shard1svr1
    image: mongo
    command: mongod --shardsvr --replSet shard1rs --port 27017 --dbpath /data/db
    ports:
      - 50001:27017
    volumes:
      - shard1svr1:/data/db
    networks:
      timo-docker-network:
        ipv4_address: 10.5.0.6

  shard1svr2:
    container_name: shard1svr2
    image: mongo
    command: mongod --shardsvr --replSet shard1rs --port 27017 --dbpath /data/db
    ports:
      - 50002:27017
    volumes:
      - shard1svr2:/data/db
    networks:
      timo-docker-network:
        ipv4_address: 10.5.0.7

  shard1svr3:
    container_name: shard1svr3
    image: mongo
    command: mongod --shardsvr --replSet shard1rs --port 27017 --dbpath /data/db
    ports:
      - 50003:27017
    volumes:
      - shard1svr3:/data/db
    networks:
      timo-docker-network:
        ipv4_address: 10.5.0.8

  shard2svr1:
    container_name: shard2svr1
    image: mongo
    command: mongod --shardsvr --replSet shard2rs --port 27017 --dbpath /data/db
    ports:
      - 50004:27017
    volumes:
      - shard2svr1:/data/db
    networks:
      timo-docker-network:
        ipv4_address: 10.5.0.9

  shard2svr2:
    container_name: shard2svr2
    image: mongo
    command: mongod --shardsvr --replSet shard2rs --port 27017 --dbpath /data/db
    ports:
      - 50005:27017
    volumes:
      - shard2svr2:/data/db
    networks:
      timo-docker-network:
        ipv4_address: 10.5.0.10

  shard2svr3:
    container_name: shard2svr3
    image: mongo
    command: mongod --shardsvr --replSet shard2rs --port 27017 --dbpath /data/db
    ports:
      - 50006:27017
    volumes:
      - shard2svr3:/data/db
    networks:
      timo-docker-network:
        ipv4_address: 10.5.0.11

  timoserver:
      container_name: timoserver
      image: mongo
      # network_mode: timo-docker-network
      volumes:
          - 'timoserver:/data/db'
      networks:
        timo-docker-network:
          ipv4_address: 10.5.0.12

  mongos:
    container_name: mongos
    image: mongo
    command: mongos --configdb cfgrs/10.5.0.2:27017,10.5.0.3:27017,10.5.0.4:27017 --port 27011
    networks:
      timo-docker-network:
        ipv4_address: 10.5.0.5

volumes:
  cfgsvr1: {}
  cfgsvr2: {}
  cfgsvr3: {}
  shard1svr1: {}
  shard1svr2: {}
  shard1svr3: {}
  shard2svr1: {}
  shard2svr2: {}
  shard2svr3: {}
  timoserver: {}
  
networks:
  timo-docker-network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1